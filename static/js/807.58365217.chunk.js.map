{"version":3,"file":"static/js/807.58365217.chunk.js","mappings":"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","sources":["components/MovieMarkup/MovieMarkup.styled.js","components/MovieMarkup/MovieMarkup.jsx","components/MovieDetails/MovieDetails.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Movie = styled.div`\n  display: flex;\n  gap: 1rem;\n  margin: 0.5rem 0;\n\n  > img {\n    height: 300px;\n    width: 200px;\n  }\n`;\n\nexport const MovieTitle = styled.h3`\n  margin-top: 1rem;\n`;\nexport const MovieText = styled.div`\n  margin-bottom: 1rem;\n  > span {\n    display: block;\n    font-weight: 700;\n    margin-bottom: 1rem;\n  }\n`;\nexport const MovieAddInfo = styled.div`\n  padding: 1rem 0.2rem;\n  border-bottom: 0.2rem solid rgba(0, 0, 0, 0.3);\n  border-top: 0.2rem solid rgba(0, 0, 0, 0.3);\n  > ul > li {\n    margin: 0 0 0.5rem 1rem;\n  }\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport {\n  Movie,\n  MovieAddInfo,\n  MovieText,\n  MovieTitle,\n} from './MovieMarkup.styled';\nimport PropTypes from 'prop-types';\n// import { Suspense } from 'react';\n\nconst MovieMarkup = ({ movie }) => {\n  const { title, release_date, poster_path, vote_average, overview, genres } =\n    movie;\n\n  const location = useLocation();\n  const goBack = location?.state?.from ?? '/';\n\n  const releaseDate = new Date(release_date);\n\n  const releaseYear = isNaN(releaseDate)\n    ? 'Unknown'\n    : releaseDate.getFullYear();\n\n  const posterUrl = poster_path\n    ? `https://image.tmdb.org/t/p/w400/${poster_path}`\n    : 'https://via.placeholder.com/400x600.png?text=Poster+Not+Available';\n\n  const userScore = vote_average\n    ? `${(vote_average * 10).toFixed(0)}%`\n    : 'Not rated';\n\n  if (!title) {\n    return 'Unknown';\n  }\n\n  return (\n    <section>\n      <Movie>\n        <img src={posterUrl} alt={`${title} poster`} />\n        <div>\n          <MovieTitle>\n            {title ?? 'Unknown'} ({releaseYear})\n          </MovieTitle>\n          <MovieText>User Score: {userScore}</MovieText>\n          <MovieText>\n            <span>Overview:</span> {overview}\n          </MovieText>\n\n          {genres && genres.length > 0 && (\n            <MovieText>\n              <span>Genres: </span>\n              {genres.map(genre => genre.name).join(', ')}\n            </MovieText>\n          )}\n        </div>\n      </Movie>\n      <MovieAddInfo>\n        <MovieText>Additional information:</MovieText>\n\n        <ul>\n          <li>\n            <Link to=\"cast\" state={{ from: goBack }}>\n              Cast\n            </Link>\n          </li>\n\n          <li>\n            <Link to=\"reviews\" state={{ from: goBack }}>\n              Reviews\n            </Link>\n          </li>\n        </ul>\n      </MovieAddInfo>\n      {/* <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense> */}\n    </section>\n  );\n};\n\nMovieMarkup.propTypes = {\n  movie: PropTypes.shape({\n    title: PropTypes.string,\n    release_date: PropTypes.string,\n    poster_path: PropTypes.string,\n    vote_average: PropTypes.number,\n    overview: PropTypes.string,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({ name: PropTypes.string.isRequired })\n    ),\n  }).isRequired,\n};\n\nexport default MovieMarkup;\n","import { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { BsArrowLeftShort } from 'react-icons/bs';\nimport * as API from '../../services/api';\nimport { Suspense, useEffect, useState } from 'react';\nimport MovieMarkup from 'components/MovieMarkup/MovieMarkup';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieDetailed, setmovieDetailed] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const location = useLocation();\n\n  useEffect(() => {\n    const findMovieDetailed = async () => {\n      try {\n        setIsLoading(true);\n        const res = await API.getMovieById(movieId);\n        setmovieDetailed(res);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    findMovieDetailed();\n  }, [movieId]);\n\n  return (\n    <main>\n      <Link to={location?.state?.from ?? '/'}>\n        <button\n          type=\"button\"\n          style={{\n            marginTop: '0.5rem',\n            backgroundColor: 'transparent',\n            border: '0.02rem solid rgba(0, 0, 0, 0.3)',\n            borderRadius: '0.2rem',\n            fontSize: '0.7rem',\n          }}\n        >\n          <BsArrowLeftShort\n            style={{\n              verticalAlign: 'middle',\n              marginRight: '0.2rem',\n            }}\n          />\n          Go back\n        </button>\n      </Link>\n      {isLoading ? (\n        <p>Loading...</p>\n      ) : (\n        <MovieMarkup movie={movieDetailed} state={{ from: location }} />\n      )}\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </main>\n  );\n};\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'c454af6a020661d12a6dad4eda62cbe8';\n\naxios.defaults.baseURL = BASE_URL;\nexport const getTrendingMovies = async () => {\n  const res = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return res.data;\n};\n\nexport const getMovieById = async id => {\n  const res = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n  return res.data;\n};\n\nexport const getMovieCast = async id => {\n  const res = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}`);\n  return res.data;\n};\n\nexport const getMovieReviews = async id => {\n  const res = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}`);\n  return res.data;\n};\n\nexport const getMovieByName = async name => {\n  const res = await axios.get(`/search/movie?api_key=${API_KEY}&query=${name}`);\n  return res.data;\n};\n"],"names":["Movie","styled","MovieTitle","MovieText","MovieAddInfo","movie","title","release_date","poster_path","vote_average","overview","genres","location","useLocation","goBack","state","from","releaseDate","Date","releaseYear","isNaN","getFullYear","posterUrl","userScore","toFixed","src","alt","length","map","genre","name","join","to","movieId","useParams","useState","movieDetailed","setmovieDetailed","isLoading","setIsLoading","useEffect","findMovieDetailed","API","res","console","log","type","style","marginTop","backgroundColor","border","borderRadius","fontSize","verticalAlign","marginRight","Suspense","fallback","API_KEY","axios","getTrendingMovies","data","getMovieById","id","getMovieCast","getMovieReviews","getMovieByName"],"sourceRoot":""}