{"version":3,"file":"static/js/779.d4e7d23e.chunk.js","mappings":"iQACaA,E,OAAcC,GAAAA,GAAH,mI,SCmDxB,EA/CgB,WACd,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAe,mCAAG,oGAEpBF,GAAa,GAFO,UAGFG,EAAAA,EAAAA,IAAgBT,GAHd,OAGdU,EAHc,OAIpBN,EAAWM,EAAIC,SAJK,gDAMpBC,QAAQC,IAAR,MANoB,yBAQpBP,GAAa,GARO,4EAAH,qDAWrBE,GACD,GAAE,CAACR,KAGF,8BACGK,GACC,uBAAG,iBAEH,8BACGF,EAAQW,QACP,SAAChB,EAAD,UACGK,EAAQY,KAAI,SAAAC,GAAM,OACjB,0BACGA,EAAOC,QACN,yBAAG,WAASD,EAAOC,WAEnB,uBAAG,YAEJD,EAAOE,SAAU,uBAAIF,EAAOE,WAAe,uBAAG,gBANxCF,EAAOG,GADC,OAYrB,uBAAG,qDAMd,C,+LChDKC,EAAU,mCAEhBC,EAAAA,EAAAA,SAAAA,QAHiB,+BAIV,IAAMC,EAAiB,mCAAG,oGACbD,EAAAA,EAAAA,IAAA,sCAAyCD,IAD5B,cACzBV,EADyB,yBAExBA,EAAIa,MAFoB,2CAAH,qDAKjBC,EAAY,mCAAG,WAAML,GAAN,uFACRE,EAAAA,EAAAA,IAAA,iBAAoBF,EAApB,oBAAkCC,IAD1B,cACpBV,EADoB,yBAEnBA,EAAIa,MAFe,2CAAH,sDAKZE,EAAY,mCAAG,WAAMN,GAAN,uFACRE,EAAAA,EAAAA,IAAA,iBAAoBF,EAApB,4BAA0CC,IADlC,cACpBV,EADoB,yBAEnBA,EAAIa,MAFe,2CAAH,sDAKZd,EAAe,mCAAG,WAAMU,GAAN,uFACXE,EAAAA,EAAAA,IAAA,iBAAoBF,EAApB,4BAA0CC,IAD/B,cACvBV,EADuB,yBAEtBA,EAAIa,MAFkB,2CAAH,sDAKfG,EAAc,mCAAG,WAAMC,GAAN,uFACVN,EAAAA,EAAAA,IAAA,gCAAmCD,EAAnC,kBAAoDO,IAD1C,cACtBjB,EADsB,yBAErBA,EAAIa,MAFiB,2CAAH,qD","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\nexport const ReviewsList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  gap: 1rem;\n  padding: 0.3rem;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'services/api';\nimport { ReviewsList } from './Reviews.styled';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  //   console.log(movieId);\n  useEffect(() => {\n    const findMovieReview = async () => {\n      try {\n        setIsLoading(true);\n        const res = await getMovieReviews(movieId);\n        setReviews(res.results);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    findMovieReview();\n  }, [movieId]);\n\n  return (\n    <>\n      {isLoading ? (\n        <p>Loading ...</p>\n      ) : (\n        <>\n          {reviews.length ? (\n            <ReviewsList>\n              {reviews.map(review => (\n                <li key={review.id}>\n                  {review.author ? (\n                    <b>Author: {review.author}</b>\n                  ) : (\n                    <b>No name</b>\n                  )}\n                  {review.content ? <p>{review.content}</p> : <p>No review</p>}\n                </li>\n              ))}\n            </ReviewsList>\n          ) : (\n            <p>We don't have any reviews for this movie yet </p>\n          )}\n        </>\n      )}\n    </>\n  );\n};\nexport default Reviews;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'c454af6a020661d12a6dad4eda62cbe8';\n\naxios.defaults.baseURL = BASE_URL;\nexport const getTrendingMovies = async () => {\n  const res = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return res.data;\n};\n\nexport const getMovieById = async id => {\n  const res = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n  return res.data;\n};\n\nexport const getMovieCast = async id => {\n  const res = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}`);\n  return res.data;\n};\n\nexport const getMovieReviews = async id => {\n  const res = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}`);\n  return res.data;\n};\n\nexport const getMovieByName = async name => {\n  const res = await axios.get(`/search/movie?api_key=${API_KEY}&query=${name}`);\n  return res.data;\n};\n"],"names":["ReviewsList","styled","movieId","useParams","useState","reviews","setReviews","isLoading","setIsLoading","useEffect","findMovieReview","getMovieReviews","res","results","console","log","length","map","review","author","content","id","API_KEY","axios","getTrendingMovies","data","getMovieById","getMovieCast","getMovieByName","name"],"sourceRoot":""}