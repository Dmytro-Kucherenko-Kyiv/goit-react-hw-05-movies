{"version":3,"file":"static/js/933.25ffee17.chunk.js","mappings":"uQAqBA,EAnBmB,SAAC,GAAmC,IAAjCA,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MACxC,OACE,iCACE,wBAAI,sBACJ,kBAAMF,SAAUA,EAAhB,WACE,kBACEG,KAAK,OACLC,YAAY,eACZF,MAAOA,EACPD,SAAUA,KAEZ,mBAAQE,KAAK,SAAb,SAAsB,gBAI7B,ECyCD,EArDe,WAAO,IAAD,IACnB,GAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAEA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA0BL,EAAAA,EAAAA,UAAQ,UAACI,EAAaE,IAAI,gBAAlB,QAA8B,IAAhE,eAAOT,EAAP,KAAcU,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MACXC,EAAK,UAAGN,EAAaE,IAAI,gBAApB,QAAgC,IAE3CK,EAAAA,EAAAA,YAAU,WACR,GAAKD,EAAL,CACA,IAAME,EAAS,mCAAG,+GAGYC,EAAAA,GAAmBH,GAH/B,gBAIS,KADfI,EAHM,EAGNA,SACIC,QAAcC,MAAM,mBAChCd,EAAUY,GALI,gDAOdG,QAAQC,IAAR,MAPc,qGAAH,qDAYfN,GAbkB,CAcnB,GAAE,CAACF,IAaJ,OACE,6BACE,SAAC,EAAD,CAAYf,SAbC,SAAAwB,GAEf,GADAA,EAAEC,iBACY,KAAVvB,EACF,OAAOmB,MAAM,uBAEfX,EAAgB,CAAEK,MAAOS,EAAEE,OAAO,GAAGxB,OACtC,EAOmCD,SANnB,SAAAuB,GACfZ,EAASY,EAAEE,OAAOxB,MACnB,EAIuDA,MAAOA,IAC1DI,EAAOc,OAAS,GAAKL,GACpB,wBACGT,EAAOqB,KAAI,SAAAC,GAAK,OACf,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMnB,GAAhD,SACGe,EAAMK,SAFFL,EAAME,GADA,MAQjB,OAGT,C,+LCtDKI,EAAU,mCAEhBC,EAAAA,EAAAA,SAAAA,QAHiB,+BAIV,IAAMC,EAAiB,mCAAG,oGACbD,EAAAA,EAAAA,IAAA,sCAAyCD,IAD5B,cACzBG,EADyB,yBAExBA,EAAIC,MAFoB,2CAAH,qDAKjBC,EAAY,mCAAG,WAAMT,GAAN,uFACRK,EAAAA,EAAAA,IAAA,iBAAoBL,EAApB,oBAAkCI,IAD1B,cACpBG,EADoB,yBAEnBA,EAAIC,MAFe,2CAAH,sDAKZE,EAAY,mCAAG,WAAMV,GAAN,uFACRK,EAAAA,EAAAA,IAAA,iBAAoBL,EAApB,4BAA0CI,IADlC,cACpBG,EADoB,yBAEnBA,EAAIC,MAFe,2CAAH,sDAKZG,EAAe,mCAAG,WAAMX,GAAN,uFACXK,EAAAA,EAAAA,IAAA,iBAAoBL,EAApB,4BAA0CI,IAD/B,cACvBG,EADuB,yBAEtBA,EAAIC,MAFkB,2CAAH,sDAKfI,EAAc,mCAAG,WAAMC,GAAN,uFACVR,EAAAA,EAAAA,IAAA,gCAAmCD,EAAnC,kBAAoDS,IAD1C,cACtBN,EADsB,yBAErBA,EAAIC,MAFiB,2CAAH,qD","sources":["components/MovieQuery/MovieQuery.jsx","components/Movies/Movies.jsx","services/api.js"],"sourcesContent":["import PropTypes from 'prop-types';\n\nconst MovieQuery = ({ onSubmit, onChange, value }) => {\n  return (\n    <>\n      <h3>Find your movie:</h3>\n      <form onSubmit={onSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"Type here...\"\n          value={value}\n          onChange={onChange}\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n    </>\n  );\n};\n\nMovieQuery.propTypes = { onSubmit: PropTypes.func.isRequired };\n\nexport default MovieQuery;\n","import { useEffect, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport * as API from '../../services/api';\nimport MovieQuery from 'components/MovieQuery/MovieQuery';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  // const [isLoading, setIsLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [value, setValue] = useState(searchParams.get('query') ?? '');\n  const location = useLocation();\n  const query = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (!query) return;\n    const findMovie = async () => {\n      try {\n        // setIsLoading(true);\n        const { results } = await API.getMovieByName(query);\n        if (results.length === 0) alert('Movie not found');\n        setMovies(results);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        // setIsLoading(false);\n      }\n    };\n    findMovie();\n  }, [query]);\n\n  const onSubmit = e => {\n    e.preventDefault();\n    if (value === '') {\n      return alert('No value - no movie');\n    }\n    setSearchParams({ query: e.target[0].value });\n  };\n  const onChange = e => {\n    setValue(e.target.value);\n  };\n\n  return (\n    <main>\n      <MovieQuery onSubmit={onSubmit} onChange={onChange} value={value} />\n      {movies.length > 0 || query ? (\n        <ul>\n          {movies.map(movie => (\n            <li key={movie.id}>\n              <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n                {movie.title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      ) : null}\n    </main>\n  );\n};\nexport default Movies;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'c454af6a020661d12a6dad4eda62cbe8';\n\naxios.defaults.baseURL = BASE_URL;\nexport const getTrendingMovies = async () => {\n  const res = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return res.data;\n};\n\nexport const getMovieById = async id => {\n  const res = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n  return res.data;\n};\n\nexport const getMovieCast = async id => {\n  const res = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}`);\n  return res.data;\n};\n\nexport const getMovieReviews = async id => {\n  const res = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}`);\n  return res.data;\n};\n\nexport const getMovieByName = async name => {\n  const res = await axios.get(`/search/movie?api_key=${API_KEY}&query=${name}`);\n  return res.data;\n};\n"],"names":["onSubmit","onChange","value","type","placeholder","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","get","setValue","location","useLocation","query","useEffect","findMovie","API","results","length","alert","console","log","e","preventDefault","target","map","movie","to","id","state","from","title","API_KEY","axios","getTrendingMovies","res","data","getMovieById","getMovieCast","getMovieReviews","getMovieByName","name"],"sourceRoot":""}